DES
Основний принцип роботи DES полягає у використанні симетричного ключа для шифрування та розшифрування даних. 
Симетричний ключ - це секретний код або пароль, який використовується як вхідний параметр в алгоритмі шифрування.

Основні кроки алгоритму DES наступні:

1. Генерація підключів: DES використовує 56-бітний ключ, який спочатку перетворюється у 64-бітний ключ шляхом видалення паритетних бітів. 
Потім 64-бітний ключ розбивається на 16 48-бітних підключів, які використовуються на раундах шифрування.
2. Ініціалізація: Початкові дані, які потрібно зашифрувати, розбиваються на блоки по 64 біти.
3. Перестановка (Initial Permutation - IP): Кожен блок даних проходить через початкову перестановку, 
	яка переупорядковує біти в блоку згідно з фіксованою таблицею перестановки.4. 
4. Раунди шифрування: DES використовує 16 раундів шифрування, де кожен раунд містить операції заміни та перестановки. 
	Ключі, згенеровані на першому кроці, використовуються для кожного раунду. Процес заміни та перестановки включає в себе застосування S-блоків (Substitution boxes) та перестановки бітів.
5. Фінальна перестановка (Final Permutation - FP): Після останнього раунду шифрування застосовується фінальна перестановка,
 	яка переупорядковує біти в блоку відповідно до іншої таблиці перестановки.
6. Завершення шифрування: Зашифрований текст отримується після фінальної перестановки. 
Кінцевий зашифрований текст має таку ж довжину, як і початковий блок даних.

Hash function SHA-1
Hash function SHA-1 є одним з найвідоміших хеш-функцій, яка використовується для генерації хеш-суми для повідомлень або даних. 
Її принцип роботи полягає у перетворенні вхідного повідомлення фіксованої довжини в унікальний вихідний хеш-код фіксованої довжини, який зазвичай складається з 160 біт.
Основні кроки алгоритму SHA-1 наступні:

1. Підготовка повідомлення: Вхідне повідомлення розбивається на блоки фіксованої довжини. Для SHA-1 ця довжина становить 512 біт.
2. Додавання доповнень: До кожного блоку даних додаються доповнення для забезпечення фіксованої довжини. Доповнення включає біти, що кодують довжину початкового повідомлення.
3. Ініціалізація хеш-значення: Початкове значення хеш-суми (160-бітний хеш-код) встановлюється за замовчуванням.
4. Цикл обчислень: Кожен блок повідомлення обробляється в циклі за допомогою ітеративних операцій. 
	У цьому циклі використовуються операції логічних функцій (AND, OR, XOR), зсувів бітів та нелінійних логічних функцій для поетапного обчислення хеш-коду.
5. Формування хеш-суми: Після обробки всіх блоків повідомлення отримується фінальний хеш-код, який є вихідним значенням SHA-1.